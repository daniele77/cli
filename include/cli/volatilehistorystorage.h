/*******************************************************************************
 * CLI - A simple command line interface.
 * Copyright (C) 2016-2021 Daniele Pallastrelli
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

#ifndef CLI_VOLATILEHISTORYSTORAGE_H_
#define CLI_VOLATILEHISTORYSTORAGE_H_

#include "historystorage.h"
#include <deque>

namespace cli
{

class VolatileHistoryStorage : public HistoryStorage
{
    public:
        explicit VolatileHistoryStorage(std::size_t size = 1000) : maxSize(size) {}
        void Store(const std::vector<std::string>& cmds) override
        {
            using dt = std::deque<std::string>::difference_type;
            commands.insert(commands.end(), cmds.begin(), cmds.end());
            if (commands.size() > maxSize)
                commands.erase(
                    commands.begin(),
                    commands.begin()+static_cast<dt>(commands.size()-maxSize)
                );
        }
        std::vector<std::string> Commands() const override
        {
            return std::vector<std::string>(commands.begin(), commands.end());
        }
        void Clear() override
        {
            commands.clear();
        }
    private:
        const std::size_t maxSize;
        std::deque<std::string> commands;
};

} // namespace cli

#endif // CLI_VOLATILEHISTORYSTORAGE_H_
