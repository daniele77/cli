################################################################################
# CLI - A simple command line interface.
# Copyright (C) 2019 Daniele Pallastrelli
#
# Boost Software License - Version 1.0 - August 17th, 2003
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

cmake_minimum_required(VERSION 3.8)

project(cli VERSION 1.2.1 LANGUAGES CXX)

include(GNUInstallDirs)

option(CLI_BuildExamples "Build the examples." OFF)
option(CLI_BuildTests "Build the unit tests." OFF)

set(Boost_NO_BOOST_CMAKE ON)
find_package(Boost 1.55 REQUIRED COMPONENTS system)
find_package(Threads REQUIRED)

# Add Library
add_library(cli INTERFACE)
# Add target alias
add_library(cli::cli ALIAS cli)

target_include_directories(cli
        INTERFACE
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
)

target_link_libraries(cli INTERFACE Boost::system Threads::Threads)
target_compile_features(cli INTERFACE cxx_std_14)
target_compile_definitions(cli INTERFACE BOOST_ASIO_NO_DEPRECATED=1)

# Examples
if (CLI_BuildExamples)
    add_subdirectory(examples)
endif()

# Tests
if (CLI_BuildTests)
	enable_testing()
	add_subdirectory(test)
endif()

# Install
install(DIRECTORY include/cli DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

include(CMakePackageConfigHelpers)
configure_package_config_file(
	"cliConfig.cmake.in"
	"${CMAKE_CURRENT_BINARY_DIR}/cliConfig.cmake"
	INSTALL_DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/cli"
)

# Generate pkg-config .pc file
set(PKGCONFIG_INSTALL_DIR
	${CMAKE_INSTALL_DATAROOTDIR}/pkgconfig
	CACHE PATH "Installation directory for pkg-config (cli.pc) file"
)
configure_file(
	"cli.pc.in"
	"cli.pc"
	@ONLY
)

install(TARGETS cli EXPORT cliTargets LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(EXPORT cliTargets FILE cliTargets.cmake NAMESPACE cli:: DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/cli)

install(
	FILES "${CMAKE_CURRENT_BINARY_DIR}/cliConfig.cmake"
	DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/cli"
)
install(
      FILES "${CMAKE_CURRENT_BINARY_DIR}/cli.pc"
      DESTINATION ${PKGCONFIG_INSTALL_DIR}
)
